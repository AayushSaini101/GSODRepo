Tutorial of FLINT Reporting tool.
====================================

Introduction
--------------
**FLINT Reporting tool** is a web application that is built on is built on Spring framework Spring Boot, Angular, PostgreSQL, Docker, BASH technologies.
that allows users to configure and manage the reports that are generated by FLINT.
The reports can be of type tables, graphs and some other artifacts, Current version the FLINT Reporting tool generating only 
the **CRF** Tables. 

Structure:
-----------------
The Below diagram shows the flows of execution of the input and the output of the FLINT Reporting Tool.

.. image:: Fifth.png
  :width: 400
  :alt: Structure text
Mechanics:
----------
Let's understand what exactly does the Reporting tool take in and what does it return.

.. image:: First.png
  :width: 400
  :alt: Input text

This is the FLUX database that is used to generate the reports. The FLUX Fact is marked by various
attributes. The attributes are:

* **Pools**: Marking the movement of carbon from pool to pool.
* **Type**: The Type of FLUX Fact.
* **Location**: The Location where the FLUX Fact is generated.

.. image:: Eight.png
  :width: 400
  :alt: Output text
  
The FLINT also keeps a history of the vegetation of the History.

**Processing Step 1**
 Excecuting the Decision tree of the Land use class History to generate the FLUX Fact.

**Processing Step 2**
 It checks the land use that is calculate in the first step, and makes the decision where the flux fact aggreated.

 Let's understand with the help of an image.

 .. image:: Third.png
  :width: 400
  :alt: Table image
If the FLUX type is Wildfire, and the land use class is Forest Land, the decision of the FLINT Reporting tool will be 
aggreate values of CO2, CH4 and N2O.

**Processing Step 3**
After processing the above steps, to calculate the aggregation of the material from one pool to another pool either add or subtract.
 
.. image:: Fourth.png
  :width: 400
  :alt: Table image

The add and subtract decision has been made by the FLINT Reporting tool.

**Last Stage**

The Reporting tool aggreates all the information from all the above steps and generate CRF tables.

.. image:: Six.png
  :width: 400
  :alt: Final image

Project Structure
-------------
Let's understand the project structure of the FLINT Reporting tool. You can fork the repo form the given link.
https://github.com/moja-global/FLINT.Reporting.git


.. image:: Seven.png
  :width: 400
  :alt: Final image

The configuration of the client application is here https://docs.moja.global/projects/flint-reporting/en/latest/DevelopmentGuide/source-code-organization.html
but this is outdated the details of various files and folder is missing in the docs. For example  e2e folder etc. 

I will add this in the proposed timeline. The client application is mainly build on the angular.js framework.

Setup the project 
------------------
For Setup the project, We have to setup the suitable enviornment for the  FLINT Reporting tool First.

For this we have to first set the up enviornment of all the dependencies first inorder to execute the 
FLINT Reporting tool.

 
.. code:: sh

    FLINT.Reporting\code\scripts\setup\environment

**Enviornment Setup** 
There are two option either we can individual execute all the scripts of the all dependencies, or we can execute the superscript that 
will setup the enviornment for all the technologies like node, java, maven etc

The configuration of the SuperScript is given below:

https://github.com/AayushSaini101/FLINT.Reporting/commit/66f33e5b2155c5b6c0724a88bec54fbb35c7ccf0

**System Setup**
The next step is to setup the system for the FLINT Reporting system. For example installing the modules for the client application 

.. code:: sh

    FLINT.Reporting\code\scripts\setup\System

.. note:: 
    This is the draft structure that i will follow for making the Tutorial projects.